#!/bin/bash
#==============================================================================
# cgyro_plot
#
# PURPOSE:
#  Plotting/listing routines for CGYRO output.
#==============================================================================

#==============================================================================
# Syntax validity check and help message
#
n=$#

if [ $n -eq 0 ]
then
  echo
  echo "Usage:   cgyro_plot [options]"
  echo
  echo "         -p <path>"
  echo "         Set optional path to simulation directory."
  echo "         [The default path is the current directory]"
  echo
  echo "         -e <simdir>"
  echo "         Use data in <simdir>."
  echo
  echo "         -ext <prefix.filetype>"
  echo "         Output file type (and optional prefix)"
  echo "         <filetype>=eps, pdf, png, svg, dump, nox"
  echo
  echo "         -notex"
  echo "         Disable latex fonts"
  echo
  echo "PLOT MODE"
  echo 
  echo "         -plot <type>"
  echo "         <type> = freq     (frequency versus time)"
  echo "                = ky_freq  (frequency versus ky)"
  echo "                = ball     (ballooning modes OR ZF test)"
  echo "                = hball    (ballooning distribution; use -n for l and -ie for e)"
  echo "                = hb       (2D ballooning distribution)"
  echo "                = hbcut    (1D ballooning distribution line plots)"
  echo "                = geo      (geometry arrays)"
  echo "                = zf       (zonal flow potential vs. time)"
  echo "                = error    (time-integration error)"
  echo "                = flux     (time-trace of fluxes for all species)"
  echo "                = ky_flux  (bar plot of flux versus ky)"
  echo "                = phi      (time-dependent ZF vs. finite-n intensities)"
  echo "                = ky_phi   (time-dependent ky-phi intensities)"
  echo "                = kx_phi   (average kx-phi intensities)"
  echo "                = kx_shift (kx-phi intensities in both domains)"
  echo "                = poly_phi (average Legendre intensities)"
  echo "                = kxky_phi (kx-ky spectra of ave(|phi|))"
  echo "                = rcorr_phi (time-average radial correlation function)"
  echo "                = xflux    (radial profile of fluxes for all species)"
  echo "                = low      (long-wavelength moments versus time)"
  echo "                = corrug   (time-averaged profile corrugations)"
  echo "                = shift    (spectral shift)"
  echo "                = fluct    (x-y fluctuation contours at fixed timeslice)"
  echo "                = rt       (x-t fluctuation contours)"
  echo "                = vid      (create video from png files)"
  echo "                -----------------------------------------------------"
  echo "                = distill  (data distillation) [GENERATES OUTPUT]"
  echo "                = gs2      (print some GS2 outputs)"
  echo "                = template (create simple template file to read data)"
  echo
  echo "VISUALIZATION MODE (requires Mayavi)"
  echo 
  echo "         -vis <type>"
  echo "         <type> = torcut     (toroidal cut: nx,nz)"
  echo "                = wheel      (fluctuation wheel: nx,ny,nz)"
  echo "                = supertorus (partial torus: nx,nz,nphi)"
  echo
  echo "OPTIONS"
  echo
  echo "         -species <value>"
  echo "         Specify species to be plotted: [0,n_species-1]."
  echo
  echo "         -field <value>"
  echo "         Specify field to be plotted: [0,n_field-1]."
  echo
  echo "         -fc"
  echo "         Toggle plotting of field breakdown of fluxes."
  echo
  echo "         -cflux <on,off,auto>"
  echo "         Selector for central flux (on=on,off=off,auto=select based on gamma_e"
  echo
  echo "         -moment <value>"
  echo "         Specify moment to be plotted [n,e,v]."
  echo
  echo "         -w <float> OR <float>,<float>"
  echo "         Width of time-average window"
  echo "         NOTE: -w 0.5 averages over last 50%; -w 100,200 averages over 100a/cs < t < 200a/cs"
  echo 
  echo "         -mesh"
  echo "         Add theta-xi mesh"
  echo "         *Affects: hb" 
  echo
  echo "         -ymin | -ymax <float>"
  echo "         Minimum | Maximum value of vertical axis (where applicable)."
  echo "         *Affects: flux, ky_flux"
  echo
  echo "         -kxmin | -kxmax <float>"
  echo "         Minimum | Maximum value of kx axis (where applicable)."
  echo
  echo "         -lx <float>"
  echo "         Plot width (default 12)"
  echo
  echo "         -ly <float>"
  echo "         Plot height (default 6)."
  echo
  echo "         -fontsize <float>"
  echo "         Font size (default 18)."
  echo
  echo "         -nscale"
  echo "         Scale the fluxes with ne/ni factor"
  echo "         *Affects: flux"
  echo
  echo "         -theta <int>"
  echo "         Theta index to select"
  echo
  echo "         -tmax <float>"
  echo "         Maximum value of ballooning angle."
  echo "         *Affects: ball, hb, hbcut"
  echo
  echo "         -t <value>"
  echo "         Specify integer time index (-1 is last time)."
  echo "         *Affects: ball, hb, hbcut, fluct"
  echo "         *Contour examples: all, -1, 3-8"
  echo
  echo "         -n <value>"
  echo "         Specify values of n (toroidal mode index)"
  echo "         *Affects: ky_phi"
  echo
  echo "         -ie <value>"
  echo "         Specify energy index"
  echo "         *Affects: hball"
  echo
  echo "         -loc <loc>"
  echo "         Legend location (1-4)"  
  echo
  echo "         -norm <int>"
  echo "         Species index for normalization (starts at 0)"  
  echo
  echo "         -abs"
  echo "         Toggle ABS rather than RMS normalization in -plot phi"  
  echo
  echo "         -nobar"
  echo "         Don't use barplot for -plot ky_flux/kx_phi"  
  echo
  echo "OPTIONS FOR -plot fluct, -vis"
  echo
  echo "         -nomp <threads>"
  echo "         Number of OpenMP threads per MPI task."
  echo
  echo "         -nx <int>"
  echo "         Number of radial interpolation points (default FFT)"
  echo
  echo "         -ny <int>"
  echo "         Number of alpha interpolation points (default FFT)"
  echo
  echo "         -nphi <int>"
  echo "         Number of toroidal points for supertorus"
  echo
  echo "         -phimax <float>"
  echo "         End toroidal angle for supertorus (-2*pi*phimax)"
  echo
  echo "         -px <int>"
  echo "         Number of horixontal pixels (default 800)"
  echo
  echo "         -py <int>"
  echo "         Number of vertical pixels (default 800)"
  echo
  echo "         -fmin <float>"
  echo "         Minimum value for contour plot"
  echo
  echo "         -fmax <float>"
  echo "         Maximum value for contout plot"
  echo
  echo "         -start <int>"
  echo "         First frame for encoding"
  echo
  echo "         -cmap <value>"
  echo "         Name of colormap (jet,hsv,brg,...)"  
  echo
  echo "         -legacy"
  echo "         Use legacy Clebsch factor in eikonal"  
  echo
  echo "         -land"
  echo "         Use landscape mode (ly,lx) for -plot fluct"  
  echo
  echo "         -dn <int>"
  echo "         Modify value of delta n_toroidal (simulation runs with dn=1) (default 1)"  
  echo
  echo "         -mag <float>"
  echo "         Magnify radial direction (or set '-mag 0' to plot shape functions) (default 1.0)"  
  echo
  echo "         -nozonal"
  echo "         Remove zonal (n=0) component of the fluctuations (-vis torcut only)"  
  echo
  echo "         -onlyzonal"
  echo "         Remove nonzonal (n>0) component of the fluctuations (-vis torcut only)"  
  echo
  echo "OPTIONS FOR -plot vid"
  echo
  echo "         -pre <prefix>"
  echo "         Prefix for file encoding (generated by -ext prefix.png)"  
  echo
  echo "         -framerate <int>"
  echo "         Framerate (default: 20)"  
  echo
  echo "         -q <int>"
  echo "         Quality (lossless:0, default: 20, grainy: 30)"  
  echo
  echo
  echo "LINEAR EXAMPLES"
  echo "  $ cgyro_plot -e . -plot freq           [frequency versus time]"
  echo "  $ cgyro_plot -e . -plot ball -field 0  [phi versus ballooning angle]"
  echo "  $ cgyro_plot -e . -plot zf             [zf phi versus time]"
  echo
  echo "NONLINEAR EXAMPLES (fields)"
  echo "  $ cgyro_plot -e . -plot phi               [phi(t) for n=0 and n>0]"
  echo "  $ cgyro_plot -e . -plot ky_phi -n 0,2,4-8 [phi harmonics versus time]"
  echo "  $ cgyro_plot -e . -plot ky_phi -field 2   [bpar harmonics versus time]"
  echo
  echo "NONLINEAR EXAMPLES (fluxes)"
  echo "  $ cgyro_plot -e . -plot flux              [energy flux versus time]"
  echo "  $ cgyro_plot -e . -plot flux -ext png     [... above to PNG file]"
  echo "  $ cgyro_plot -e . -plot flux -moment n    [particle flux versus time]"
  echo "  $ cgyro_plot -e . -plot flux -fc -field 1 [A_par energy flux versus time]"
  echo "  $ cgyro_plot -e . -plot ky_flux           [energy flux versus ky]"
  echo
  echo "VISUALIZATIONS [build gapy for speed]"
  echo "  $ cgyro_plot -plot fluct -t 16 -moment phi"
  echo "  $ cgyro_plot -plot fluct -t 16 -moment phi -land -nx 512 -ny 1024"
  echo
  echo "VISUALIZATIONS [*requires Mayavi*]"
  echo "  $ cgyro_plot -vis torcut -moment n -nx 256 -nz 512"
  echo "  $ cgyro_plot -vis wheel  -moment n -land -nx 256 -ny 256 -nz 256"
  echo "  $ cgyro_plot -vis supertorus -moment n -nx 256 -nz 512 -nphi 50 -phimax 0.5"

  exit 1
fi
#==============================================================================

#==============================================================================
# Define variables for flag capture
#
# Default simulation directory
LOCDIR=.
SIMROOT=$PWD

TEX=1
FONTSIZE=18
LX=12
LY=6

PLOT_TYPE=null
VIS_TYPE=null
EXT=screen

SPECIES=0
FIELD=0
FNORM=0
FC=0
TIME=-1
TMAX=-1.0
YMIN=auto
YMAX=auto
KXMIN=auto
KXMAX=auto
W=0.5
win=null
MOMENT=phi
INDX=1
THETA=-1
N=null
MESH=0
NX=-1
NY=-1
NZ=-1
NPHI=50
PHIMAX=0.5
ND=0
NOMP=1
NMPI=1
FMIN=auto
FMAX=auto
CMAP=jet
START=1
NSCALE=0
LOC=2
LEGACY_FLAG=0
LAND_FLAG=0
PX=800
PY=800
NORM='elec'
ABS=0
BAR=0

CFLUX=auto
DN=1
MAG=1.0
IE=0
NOZONAL=0
ONLYZONAL=0

PRE=
FRAMERATE=20
QUALITY=20
#==============================================================================

#==============================================================================
# Parse command line options
#
while [ $# -gt 0 ] ; do
  case "$1" in

  -plot) shift ; PLOT_TYPE=$1 ;;
  -vis)  shift ; VIS_TYPE=$1 ;;

  -e) shift ; LOCDIR=$1 ;;

  -p) shift ; SIMROOT=$1 ;;

  -species) shift ; SPECIES=$1 ;;

  -field) shift ; FIELD=$1 ;;
  -fnorm) shift ; FNORM=$1 ;;

  -fc) FC=1 ;;

  -bar) BAR=1 ;;
  -notex) TEX=0 ;;
  -abs) ABS=1 ;;
  -norm) shift ; NORM=$1 ;;

  -moment) shift ; MOMENT=$1 ;;
  -ie) shift ; IE=$1 ;;

  -cflux) shift ; CFLUX=$1 ;;

  -ext) shift ; EXT=$1 ;;

  -nomp) shift ; NOMP=$1 ;;
  -nmpi) shift ; NMPI=$1 ;;

  -t) shift ; TIME=$1 ;;

  -tmax) shift ; TMAX=$1 ;;

  -theta) shift ; THETA=$1 ;;

  -ymax) shift ; YMAX=$1 ;;
  -ymin) shift ; YMIN=$1 ;;
  -kxmax) shift ; KXMAX=$1 ;;
  -kxmin) shift ; KXMIN=$1 ;;
  -lx) shift ; LX=$1 ;;
  -ly) shift ; LY=$1 ;;
  -px) shift ; PX=$1 ;;
  -py) shift ; PY=$1 ;;
  -fontsize) shift ; FONTSIZE=$1 ;;

  -w) shift ; W=$1 ;;
  -loc) shift ; LOC=$1 ;;

  -start) shift ; START=$1 ;;

  -n) shift ; N=$1 ;;
  -nx) shift ; NX=$1 ;;
  -ny) shift ; NY=$1 ;;
  -nz) shift ; NZ=$1 ;;
  -nphi) shift ; NPHI=$1 ;;
  -phimax) shift ; PHIMAX=$1 ;;
  -nd) shift ; ND=$1 ;;
  -fmin) shift ; FMIN=$1 ;;
  -fmax) shift ; FMAX=$1 ;;
  -cmap) shift ; CMAP=$1 ;;
  -nscale) NSCALE=1 ;;

  -mesh) MESH=1 ;;

  -legacy) LEGACY_FLAG=1 ;;
  -land) LAND_FLAG=1 ;;
  -dn) shift ; DN=$1 ;;
  -mag) shift ; MAG=$1 ;;
  -nozonal) NOZONAL=1 ;;
  -onlyzonal) ONLYZONAL=1 ;;

  -pre) shift ; PRE=$1 ;;
  -q)  shift ; QUALITY=$1 ;;
  -framerate) shift ; FRAMERATE=$1 ;;

  -h) shift ; cat $GACODE_ROOT/cgyro/bin/FILE_FORMAT ; exit 0 ;;

  *) echo "ERROR: incorrect syntax." ; exit 1 ;;

  esac
  shift
done
#==============================================================================

if [ "$LOCDIR" == "." ]
then
   LOCDIR=`basename $PWD`
   cd .. ; SIMROOT=$PWD
fi
SIMDIR=$SIMROOT/$LOCDIR
cd $SIMDIR

PYROOT=$GACODE_ROOT/f2py/pygacode/cgyro

#==============================================================================

PLT="-m pygacode.cgyro.data_plot_single $TEX $FONTSIZE"

PFLAGS="$PLOT_TYPE $LX $LY $W $NORM $EXT $TIME $FIELD $FNORM $MOMENT $TMAX $THETA $YMIN $YMAX $KXMIN $KXMAX $N $ABS $FC $LOC $NSCALE $CFLUX $SPECIES $BAR $IE $MESH"

case "$VIS_TYPE" in

   null) ;;
   
   torcut)
	export OMP_NUM_THREADS=$NOMP ; python -m pygacode.cgyro.vis_torcut $EXT $MOMENT $SPECIES $NX $NZ $TIME $FMIN $FMAX $CMAP $FONTSIZE $LEGACY_FLAG $DN $MAG $NOZONAL $ONLYZONAL ;;
   
   wheel)
	export OMP_NUM_THREADS=$NOMP ; python -m pygacode.cgyro.vis_wheel $EXT $MOMENT $SPECIES $NX $NY $NZ $TIME $FMIN $FMAX $CMAP $FONTSIZE ;;

   supertorus)
	export OMP_NUM_THREADS=$NOMP ; python -m pygacode.cgyro.vis_supertorus $EXT $MOMENT $SPECIES $NX $NZ $NPHI $PHIMAX $TIME $FMIN $FMAX $CMAP $FONTSIZE $LEGACY_FLAG $DN $MAG $NOZONAL $ONLYZONAL $PX $PY ;;
   
    *)
        echo "Unrecognized argument to -vis" ; exit 1 ;;
esac

case "$PLOT_TYPE" in

   null) ;;

   distill)
       python -m pygacode.cgyro.data_distill $W $THETA ;;

   gs2)
       python -m pygacode.cgyro.conv_gs2 ;;

   template)
       cp $PYROOT/plot_template.py . ;;

   freq | ky_freq | error | geo | ball | ky_phi | phi | flux | rcorr_phi | low | zf | ky_flux | shift | corrug | kx_phi | kxky_phi | kx_shift | poly_phi | xflux | hb | hbcut | hball )
       python $PLT $PFLAGS ;;
  
   fluct)
       export OMP_NUM_THREADS=$NOMP ; \
       python -m pygacode.cgyro.plot_fluct \
	      $EXT $MOMENT $SPECIES $PX $PY $NX $NY $TIME $FMIN $FMAX $CMAP $FONTSIZE $LAND_FLAG $THETA ;;

   rt)
       export OMP_NUM_THREADS=$NOMP ; \
       python -m pygacode.cgyro.plot_rt \
	      $EXT $MOMENT $SPECIES $YMIN $YMAX $NX $ND $TIME $FMIN $FMAX $CMAP $FONTSIZE $THETA ;;

   vid)
   	$PYROOT/avconv_wrapper $START $FRAMERATE $QUALITY $PRE ;;

   *)
        echo "Unrecognized argument to -plot" ; exit 1 ;;

esac 

exit 0
